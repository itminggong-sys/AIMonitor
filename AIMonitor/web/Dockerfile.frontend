# Multi-stage build - Frontend service
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Set npm mirror source
RUN npm config set registry https://registry.npmmirror.com/

# Copy package files
COPY package*.json ./

# Install build dependencies and set environment
RUN apk add --no-cache python3 make g++ && \
    ln -sf /usr/bin/python3 /usr/bin/python

# Set environment variables for npm
ENV PYTHON=/usr/bin/python3
ENV npm_config_python=/usr/bin/python3

# Install dependencies with retry mechanism
RUN echo 'Starting frontend dependency installation...' && \
    for i in 1 2 3; do \
        echo 'Attempt $i to install dependencies' && \
        npm install && break || \
        (echo 'Installation failed, cleaning cache and retrying...' && npm cache clean --force && sleep 5); \
    done && \
    echo 'Dependency installation completed'

# Copy source code
COPY . .

# Build application
RUN echo 'Starting frontend build...' && \
    npm run build && \
    echo 'Frontend build completed'

# Runtime stage
FROM nginx:alpine

# Copy build artifacts
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:80 || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
